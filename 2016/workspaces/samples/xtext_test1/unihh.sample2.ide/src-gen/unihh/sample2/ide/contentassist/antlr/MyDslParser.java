/*
 * generated by Xtext 2.9.0
 */
package unihh.sample2.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import unihh.sample2.ide.contentassist.antlr.internal.InternalMyDslParser;
import unihh.sample2.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Inject
	private MyDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getGreetwordAccess().getAlternatives(), "rule__Greetword__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getPersonAccess().getGroup(), "rule__Person__Group__0");
					put(grammarAccess.getGreetingAccess().getGroup(), "rule__Greeting__Group__0");
					put(grammarAccess.getModelAccess().getPersonsAssignment_2(), "rule__Model__PersonsAssignment_2");
					put(grammarAccess.getModelAccess().getGreetingsAssignment_6(), "rule__Model__GreetingsAssignment_6");
					put(grammarAccess.getPersonAccess().getNameAssignment_0(), "rule__Person__NameAssignment_0");
					put(grammarAccess.getPersonAccess().getFirstnameAssignment_2(), "rule__Person__FirstnameAssignment_2");
					put(grammarAccess.getPersonAccess().getLastnameAssignment_4(), "rule__Person__LastnameAssignment_4");
					put(grammarAccess.getGreetingAccess().getWordAssignment_0(), "rule__Greeting__WordAssignment_0");
					put(grammarAccess.getGreetingAccess().getPersonAssignment_1(), "rule__Greeting__PersonAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalMyDslParser typedParser = (InternalMyDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
