/**
 * generated by Xtext 2.9.0
 */
package unihh.sample1.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import unihh.sample1.myDsl.Aggregate;
import unihh.sample1.myDsl.Context;
import unihh.sample1.myDsl.Domain;
import unihh.sample1.myDsl.MyDslPackage;
import unihh.sample1.myDsl.foo;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>foo</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link unihh.sample1.myDsl.impl.fooImpl#getDomains <em>Domains</em>}</li>
 *   <li>{@link unihh.sample1.myDsl.impl.fooImpl#getContexts <em>Contexts</em>}</li>
 *   <li>{@link unihh.sample1.myDsl.impl.fooImpl#getAggregates <em>Aggregates</em>}</li>
 * </ul>
 *
 * @generated
 */
public class fooImpl extends ModelImpl implements foo
{
  /**
   * The cached value of the '{@link #getDomains() <em>Domains</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomains()
   * @generated
   * @ordered
   */
  protected EList<Domain> domains;

  /**
   * The cached value of the '{@link #getContexts() <em>Contexts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContexts()
   * @generated
   * @ordered
   */
  protected EList<Context> contexts;

  /**
   * The cached value of the '{@link #getAggregates() <em>Aggregates</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAggregates()
   * @generated
   * @ordered
   */
  protected EList<Aggregate> aggregates;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected fooImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.FOO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Domain> getDomains()
  {
    if (domains == null)
    {
      domains = new EObjectContainmentEList<Domain>(Domain.class, this, MyDslPackage.FOO__DOMAINS);
    }
    return domains;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Context> getContexts()
  {
    if (contexts == null)
    {
      contexts = new EObjectContainmentEList<Context>(Context.class, this, MyDslPackage.FOO__CONTEXTS);
    }
    return contexts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Aggregate> getAggregates()
  {
    if (aggregates == null)
    {
      aggregates = new EObjectContainmentEList<Aggregate>(Aggregate.class, this, MyDslPackage.FOO__AGGREGATES);
    }
    return aggregates;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.FOO__DOMAINS:
        return ((InternalEList<?>)getDomains()).basicRemove(otherEnd, msgs);
      case MyDslPackage.FOO__CONTEXTS:
        return ((InternalEList<?>)getContexts()).basicRemove(otherEnd, msgs);
      case MyDslPackage.FOO__AGGREGATES:
        return ((InternalEList<?>)getAggregates()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.FOO__DOMAINS:
        return getDomains();
      case MyDslPackage.FOO__CONTEXTS:
        return getContexts();
      case MyDslPackage.FOO__AGGREGATES:
        return getAggregates();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.FOO__DOMAINS:
        getDomains().clear();
        getDomains().addAll((Collection<? extends Domain>)newValue);
        return;
      case MyDslPackage.FOO__CONTEXTS:
        getContexts().clear();
        getContexts().addAll((Collection<? extends Context>)newValue);
        return;
      case MyDslPackage.FOO__AGGREGATES:
        getAggregates().clear();
        getAggregates().addAll((Collection<? extends Aggregate>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.FOO__DOMAINS:
        getDomains().clear();
        return;
      case MyDslPackage.FOO__CONTEXTS:
        getContexts().clear();
        return;
      case MyDslPackage.FOO__AGGREGATES:
        getAggregates().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.FOO__DOMAINS:
        return domains != null && !domains.isEmpty();
      case MyDslPackage.FOO__CONTEXTS:
        return contexts != null && !contexts.isEmpty();
      case MyDslPackage.FOO__AGGREGATES:
        return aggregates != null && !aggregates.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //fooImpl
