/*
* generated by Xtext
*/
grammar InternalGreeter;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.senacor.mdsd.hh.editortweaks.greeter.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.senacor.mdsd.hh.editortweaks.greeter.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.senacor.mdsd.hh.editortweaks.greeter.services.GreeterGrammarAccess;

}

@parser::members {
 
 	private GreeterGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GreeterGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePerson
entryRulePerson 
:
{ before(grammarAccess.getPersonRule()); }
	 rulePerson
{ after(grammarAccess.getPersonRule()); } 
	 EOF 
;

// Rule Person
rulePerson
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPersonAccess().getGroup()); }
(rule__Person__Group__0)
{ after(grammarAccess.getPersonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGreeting
entryRuleGreeting 
:
{ before(grammarAccess.getGreetingRule()); }
	 ruleGreeting
{ after(grammarAccess.getGreetingRule()); } 
	 EOF 
;

// Rule Greeting
ruleGreeting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGreetingAccess().getAlternatives()); }
(rule__Greeting__Alternatives)
{ after(grammarAccess.getGreetingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Greetword
ruleGreetword
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetwordAccess().getAlternatives()); }
(rule__Greetword__Alternatives)
{ after(grammarAccess.getGreetwordAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Language
ruleLanguage
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getAlternatives()); }
(rule__Language__Alternatives)
{ after(grammarAccess.getLanguageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Greeting__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getGroup_0()); }
(rule__Greeting__Group_0__0)
{ after(grammarAccess.getGreetingAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getGreetingAccess().getGroup_1()); }
(rule__Greeting__Group_1__0)
{ after(grammarAccess.getGreetingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Greetword__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetwordAccess().getDEEnumLiteralDeclaration_0()); }
(	'Hallo' 
)
{ after(grammarAccess.getGreetwordAccess().getDEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGreetwordAccess().getDEEnumLiteralDeclaration_1()); }
(	'Huhu' 
)
{ after(grammarAccess.getGreetwordAccess().getDEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getGreetwordAccess().getENEnumLiteralDeclaration_2()); }
(	'Hello' 
)
{ after(grammarAccess.getGreetwordAccess().getENEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getGreetwordAccess().getFREnumLiteralDeclaration_3()); }
(	'Bonjour' 
)
{ after(grammarAccess.getGreetwordAccess().getFREnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguageAccess().getDEEnumLiteralDeclaration_0()); }
(	'deutsch' 
)
{ after(grammarAccess.getLanguageAccess().getDEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getLanguageAccess().getENEnumLiteralDeclaration_1()); }
(	'englisch' 
)
{ after(grammarAccess.getLanguageAccess().getENEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getLanguageAccess().getFREnumLiteralDeclaration_2()); }
(	'franz\u00F6sisch' 
)
{ after(grammarAccess.getLanguageAccess().getFREnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPersonsAssignment_0()); }
(rule__Model__PersonsAssignment_0)*
{ after(grammarAccess.getModelAccess().getPersonsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGreetingsAssignment_1()); }
(rule__Model__GreetingsAssignment_1)*
{ after(grammarAccess.getModelAccess().getGreetingsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Person__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Person__Group__0__Impl
	rule__Person__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getPersonKeyword_0()); }

	'Person' 

{ after(grammarAccess.getPersonAccess().getPersonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Person__Group__1__Impl
	rule__Person__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getNameAssignment_1()); }
(rule__Person__NameAssignment_1)
{ after(grammarAccess.getPersonAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Person__Group__2__Impl
	rule__Person__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getFirstnameKeyword_2()); }

	'firstname' 

{ after(grammarAccess.getPersonAccess().getFirstnameKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Person__Group__3__Impl
	rule__Person__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getFnAssignment_3()); }
(rule__Person__FnAssignment_3)
{ after(grammarAccess.getPersonAccess().getFnAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Person__Group__4__Impl
	rule__Person__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getLastnameKeyword_4()); }

	'lastname' 

{ after(grammarAccess.getPersonAccess().getLastnameKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Person__Group__5__Impl
	rule__Person__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getLnAssignment_5()); }
(rule__Person__LnAssignment_5)
{ after(grammarAccess.getPersonAccess().getLnAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Person__Group__6__Impl
	rule__Person__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getSprichtKeyword_6()); }

	'spricht' 

{ after(grammarAccess.getPersonAccess().getSprichtKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Person__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getLangAssignment_7()); }
(rule__Person__LangAssignment_7)
{ after(grammarAccess.getPersonAccess().getLangAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Greeting__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group_0__0__Impl
	rule__Greeting__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getGreetwordAssignment_0_0()); }
(rule__Greeting__GreetwordAssignment_0_0)
{ after(grammarAccess.getGreetingAccess().getGreetwordAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Greeting__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group_0__1__Impl
	rule__Greeting__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getPersonAssignment_0_1()); }
(rule__Greeting__PersonAssignment_0_1)
{ after(grammarAccess.getGreetingAccess().getPersonAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Greeting__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getExclamationMarkKeyword_0_2()); }

	'!' 

{ after(grammarAccess.getGreetingAccess().getExclamationMarkKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Greeting__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group_1__0__Impl
	rule__Greeting__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getZuKeyword_1_0()); }

	'Zu' 

{ after(grammarAccess.getGreetingAccess().getZuKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Greeting__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group_1__1__Impl
	rule__Greeting__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getPersonAssignment_1_1()); }
(rule__Greeting__PersonAssignment_1_1)
{ after(grammarAccess.getGreetingAccess().getPersonAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Greeting__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group_1__2__Impl
	rule__Greeting__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getSageKeyword_1_2()); }

	'sage' 

{ after(grammarAccess.getGreetingAccess().getSageKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Greeting__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group_1__3__Impl
	rule__Greeting__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getIchKeyword_1_3()); }

	'ich' 

{ after(grammarAccess.getGreetingAccess().getIchKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Greeting__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Greeting__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getGreetwordAssignment_1_4()); }
(rule__Greeting__GreetwordAssignment_1_4)
{ after(grammarAccess.getGreetingAccess().getGreetwordAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Model__PersonsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPersonsPersonParserRuleCall_0_0()); }
	rulePerson{ after(grammarAccess.getModelAccess().getPersonsPersonParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GreetingsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGreetingsGreetingParserRuleCall_1_0()); }
	ruleGreeting{ after(grammarAccess.getModelAccess().getGreetingsGreetingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Person__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPersonAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Person__FnAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getFnSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getPersonAccess().getFnSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Person__LnAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getLnSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getPersonAccess().getLnSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Person__LangAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPersonAccess().getLangLanguageEnumRuleCall_7_0()); }
	ruleLanguage{ after(grammarAccess.getPersonAccess().getLangLanguageEnumRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__GreetwordAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getGreetwordGreetwordEnumRuleCall_0_0_0()); }
	ruleGreetword{ after(grammarAccess.getGreetingAccess().getGreetwordGreetwordEnumRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__PersonAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getPersonPersonCrossReference_0_1_0()); }
(
{ before(grammarAccess.getGreetingAccess().getPersonPersonIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGreetingAccess().getPersonPersonIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getGreetingAccess().getPersonPersonCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__PersonAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getPersonPersonCrossReference_1_1_0()); }
(
{ before(grammarAccess.getGreetingAccess().getPersonPersonIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGreetingAccess().getPersonPersonIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getGreetingAccess().getPersonPersonCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Greeting__GreetwordAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGreetingAccess().getGreetwordGreetwordEnumRuleCall_1_4_0()); }
	ruleGreetword{ after(grammarAccess.getGreetingAccess().getGreetwordGreetwordEnumRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


