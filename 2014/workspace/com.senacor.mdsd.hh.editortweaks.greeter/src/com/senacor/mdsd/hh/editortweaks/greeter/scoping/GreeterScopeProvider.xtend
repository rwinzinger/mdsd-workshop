/*
 * generated by Xtext
 */
package com.senacor.mdsd.hh.editortweaks.greeter.scoping

import org.eclipse.xtext.scoping.IScope
import org.eclipse.emf.ecore.EReference
import com.senacor.mdsd.hh.editortweaks.greeter.greeter.Greeting
import org.eclipse.xtext.scoping.impl.ImportScope
import org.eclipse.xtext.scoping.impl.SimpleScope
import org.eclipse.xtext.scoping.Scopes

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#scoping
 * on how and when to use it 
 *
 */
class GreeterScopeProvider extends org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider {
	def IScope scope_Greeting_person(Greeting exp, EReference ref) {
		System.out.println("I'm in ...")
		// System.out.println(ref.)
	    System.out.println(ref.EReferenceType.name)
	    System.out.println(ref.eAllContents)
	    System.out.println(ref.EAnnotations)
	    System.out.println(ref.EKeys)
	    
	    IScope::NULLSCOPE
	    // new SimpleScope()
		/*
        val head = exp.ref;
        switch (head) {
            EntityRef : Scopes::scopeFor(head.entity.features)
            DotExpression : {
                val tail = head.tail
                switch (tail) {
                    Attribute : IScope::NULLSCOPE
                    Reference : Scopes::scopeFor(tail.type.features)
                    default: IScope::NULLSCOPE
                }
            }
             
            default: IScope::NULLSCOPE
        }
        */
    }
}
