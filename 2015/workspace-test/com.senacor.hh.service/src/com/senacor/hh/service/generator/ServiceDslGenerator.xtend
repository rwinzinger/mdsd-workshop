/*
 * generated by Xtext
 */
package com.senacor.hh.service.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import com.senacor.hh.service.serviceDsl.Service
import com.senacor.hh.service.serviceDsl.DeploymentEnum

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class ServiceDslGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		System.out.println("starting to generate ...")
		
		for (service : resource.allContents.toIterable.filter(Service)) {
			fsa.generateFile(
			  "com/hh/services/Service"+service.name+".java",
			  generateClass(service)
			)
		}
	}
	
	def generateClass(Service service) '''
package com.hh.services;

/**
* «service.description»
*/
public abstract class Service«service.name» {
  public static void main(String[] args) {
	  System.out.println("ich bin service '«service.name»'");
  }
  
  «FOR o : service.operations»
  public abstract void op_« o »();
  «ENDFOR»
}
	'''
}
